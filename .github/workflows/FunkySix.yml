name: Build and deploy .NET Core application to Function App FunkySix
on:
  push:
    branches:
    - main
env:
  AZURE_FUNCTIONAPP_NAME: FunkySix
  AZURE_FUNCTIONAPP_PACKAGE_PATH: src\HelloVS\.
  CONFIGURATION: Release
  # Check available releases https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json
  DOTNET_CORE_VERSION: 6.0.100-rc.1.21458.32
  WORKING_DIRECTORY: src\HelloVS
  DOTNET_CORE_VERSION_INPROC: ''
jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    # Delete Below v
    - name: Setup .NET Core 3.1 for support
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - name: DOTNET HACK
      shell: pwsh
      run: |
        $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
        $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
        $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
        foreach ($dir in $directories) {
        $from = $dir.FullName;
        $to = "$root/$version";
        Write-Host Copying from $from to $to;
        Copy-Item "$from\*" $to -Recurse -Force;
        }
      # Delete Above ^
    - name: Setup .NET Core (for inproc extensions)
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION_INPROC }}
    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
    - name: Deploy to Azure Function App
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        publish-profile: ${{ secrets.FUNKYSIX_FFFF }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
